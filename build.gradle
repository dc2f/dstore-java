/*
 * This build file was auto generated by running the Gradle 'buildSetup' task
 * by 'herbert' at '11/2/13 7:17 PM' with Gradle 1.8
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/1.8/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'sonar-runner'
apply plugin: 'jacoco'

version = '0.0.1'
group = 'com.dc2f'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'maven central' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.5'
    compile 'com.google.guava:guava:15.0'
    compile 'org.json:json:20090211'
    compile 'com.google.code.findbugs:jsr305:2.0.2'
    compile 'org.postgresql:postgresql:9.3-1100-jdbc41'
    compile 'com.mchange:c3p0:0.9.5-pre6'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.11'
    testCompile 'org.easymock:easymock:3.1'
    testRuntime 'ch.qos.logback:logback-classic:1.0.13'
}

// I'm pretty sure this is not the nicest way to do this..
// (We are simply trying to pass a system property, if it was set, into our tests.)
def setTestPropertyIfExists(task, name) {
    if (System.getProperty(name) != null) {
        tasks.withType(Test) {
            systemProperty name, System.getProperty(name);
        }
    }
}

setTestPropertyIfExists(this, 'com.dc2f.dstore.test.pghost');
setTestPropertyIfExists(this, 'com.dc2f.dstore.test.pgport');
setTestPropertyIfExists(this, 'com.dc2f.dstore.test.pguser');
setTestPropertyIfExists(this, 'com.dc2f.dstore.test.pgpassword');
setTestPropertyIfExists(this, 'com.dc2f.dstore.test.pgdatabase');
